<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook original-version='18.1' source-build='2021.3.1 (20213.21.0917.1006)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau table 1)' inline='true' name='federated.0qdajdh0ukre8d15y9m2i19wgos5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 1' name='excel-direct.0ztv2xo1dk8uu011e9alm1lre564'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Study/DataScience/covid/Tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ztv2xo1dk8uu011e9alm1lre564' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ztv2xo1dk8uu011e9alm1lre564' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_094EA590687242F09B6C6635FE5B2760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_094EA590687242F09B6C6635FE5B2760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_094EA590687242F09B6C6635FE5B2760]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_094EA590687242F09B6C6635FE5B2760]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_094EA590687242F09B6C6635FE5B2760'>
            <properties context=''>
              <relation connection='excel-direct.0ztv2xo1dk8uu011e9alm1lre564' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 3)' inline='true' name='federated.1kzx0by1n8spv416jv2li1q4x6af' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 3' name='excel-direct.1nxmd6r0ebsmi01g6xlz618hh5it'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Study/DataScience/covid/tableau table 3.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1nxmd6r0ebsmi01g6xlz618hh5it' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1nxmd6r0ebsmi01g6xlz618hh5it' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D239:no:A1:D239:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D8889F81E0C426B8F0E62CDBA516A2C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D8889F81E0C426B8F0E62CDBA516A2C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D8889F81E0C426B8F0E62CDBA516A2C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1D8889F81E0C426B8F0E62CDBA516A2C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_1D8889F81E0C426B8F0E62CDBA516A2C]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_1D8889F81E0C426B8F0E62CDBA516A2C'>
            <properties context=''>
              <relation connection='excel-direct.1nxmd6r0ebsmi01g6xlz618hh5it' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D239:no:A1:D239:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableau table 4)' inline='true' name='federated.08p8rxe1hzpqq915nz2i110o7a43' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableau table 4' name='excel-direct.1lwtu5y16win4q18werh30slyhq2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Study/DataScience/covid/tableau table 4.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1lwtu5y16win4q18werh30slyhq2' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E16384:no:A1:E16384:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1lwtu5y16win4q18werh30slyhq2' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E16384:no:A1:E16384:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E16384:no:A1:E16384:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BDF13B68E4384C1CB7F1A1ABF871D166]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BDF13B68E4384C1CB7F1A1ABF871D166]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BDF13B68E4384C1CB7F1A1ABF871D166]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BDF13B68E4384C1CB7F1A1ABF871D166]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_BDF13B68E4384C1CB7F1A1ABF871D166]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_BDF13B68E4384C1CB7F1A1ABF871D166]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Belize&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;European Union&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;High income&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Malta&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_BDF13B68E4384C1CB7F1A1ABF871D166'>
            <properties context=''>
              <relation connection='excel-direct.1lwtu5y16win4q18werh30slyhq2' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E16384:no:A1:E16384:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 2)' inline='true' name='federated.0sferh612h7dwe1bzzye70rjxhob' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 2' name='excel-direct.17pgtmp1eg08zz188a87p02xn1h9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Study/DataScience/covid/Tableau table 2.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.17pgtmp1eg08zz188a87p02xn1h9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.17pgtmp1eg08zz188a87p02xn1h9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B6:no:A1:B6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_451D14396D7F4F33AE5476DA547DF633]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_451D14396D7F4F33AE5476DA547DF633]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_451D14396D7F4F33AE5476DA547DF633]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_451D14396D7F4F33AE5476DA547DF633'>
            <properties context=''>
              <relation connection='excel-direct.17pgtmp1eg08zz188a87p02xn1h9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B6:no:A1:B6:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 1)' name='federated.0qdajdh0ukre8d15y9m2i19wgos5' />
          </datasources>
          <datasource-dependencies datasource='federated.0qdajdh0ukre8d15y9m2i19wgos5'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qdajdh0ukre8d15y9m2i19wgos5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qdajdh0ukre8d15y9m2i19wgos5].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qdajdh0ukre8d15y9m2i19wgos5].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qdajdh0ukre8d15y9m2i19wgos5].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0qdajdh0ukre8d15y9m2i19wgos5].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0qdajdh0ukre8d15y9m2i19wgos5].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0qdajdh0ukre8d15y9m2i19wgos5].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0qdajdh0ukre8d15y9m2i19wgos5].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0qdajdh0ukre8d15y9m2i19wgos5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qdajdh0ukre8d15y9m2i19wgos5].[:Measure Names]' value='199' />
            <format attr='text-format' field='[federated.0qdajdh0ukre8d15y9m2i19wgos5].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='subtotal' value='#f54a1f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qdajdh0ukre8d15y9m2i19wgos5].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0qdajdh0ukre8d15y9m2i19wgos5].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{384DB65F-5CED-4938-B428-8E92FE75044A}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total deaths per continent&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 2)' name='federated.0sferh612h7dwe1bzzye70rjxhob' />
          </datasources>
          <datasource-dependencies datasource='federated.0sferh612h7dwe1bzzye70rjxhob'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0sferh612h7dwe1bzzye70rjxhob].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0sferh612h7dwe1bzzye70rjxhob].[none:location:nk]' value='113' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0sferh612h7dwe1bzzye70rjxhob].[none:location:nk]' />
              <text column='[federated.0sferh612h7dwe1bzzye70rjxhob].[sum:TotalDeathCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0sferh612h7dwe1bzzye70rjxhob].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0sferh612h7dwe1bzzye70rjxhob].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{134B15A2-E968-4DCD-AAD9-50CEA5770DB7}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Infected percentage of population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 3)' name='federated.1kzx0by1n8spv416jv2li1q4x6af' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1kzx0by1n8spv416jv2li1q4x6af'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1kzx0by1n8spv416jv2li1q4x6af].[Longitude (generated)]' field-type='quantitative' max='27479717.872503228' min='-20125238.644285988' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1kzx0by1n8spv416jv2li1q4x6af].[Latitude (generated)]' field-type='quantitative' max='12080244.120284863' min='-10541057.923656793' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1kzx0by1n8spv416jv2li1q4x6af].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1kzx0by1n8spv416jv2li1q4x6af].[sum:PercentPopulationInfected:qk]' value='Percent of Population infected'>
              <formatted-text>
                <run>Percent of Population infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1kzx0by1n8spv416jv2li1q4x6af].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.1kzx0by1n8spv416jv2li1q4x6af].[none:Location:nk]' />
              <geometry column='[federated.1kzx0by1n8spv416jv2li1q4x6af].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kzx0by1n8spv416jv2li1q4x6af].[Latitude (generated)]</rows>
        <cols>[federated.1kzx0by1n8spv416jv2li1q4x6af].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{88B1FE5F-4208-441C-B17B-8E427D5C59D3}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableau table 4)' name='federated.08p8rxe1hzpqq915nz2i110o7a43' />
          </datasources>
          <datasource-dependencies datasource='federated.08p8rxe1hzpqq915nz2i110o7a43'>
            <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[HighestInfectionCount]' derivation='Avg' name='[avg:HighestInfectionCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08p8rxe1hzpqq915nz2i110o7a43].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.08p8rxe1hzpqq915nz2i110o7a43].[tmn:date:qk]' included-values='in-range'>
            <max>#2022-01-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.08p8rxe1hzpqq915nz2i110o7a43].[none:Location:nk]</column>
            <column>[federated.08p8rxe1hzpqq915nz2i110o7a43].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08p8rxe1hzpqq915nz2i110o7a43].[tmn:date:qk]' field-type='quantitative' max='#2022-01-19 20:29:50.972#' min='#2020-12-13 03:30:09.027#' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.08p8rxe1hzpqq915nz2i110o7a43].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08p8rxe1hzpqq915nz2i110o7a43].[none:Location:nk]' />
              <text column='[federated.08p8rxe1hzpqq915nz2i110o7a43].[avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08p8rxe1hzpqq915nz2i110o7a43].[avg:HighestInfectionCount:qk]</rows>
        <cols>[federated.08p8rxe1hzpqq915nz2i110o7a43].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{C1F63AF6-45C4-47C2-89CF-A3FC3505B5AE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Covid'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='8' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='6' type-v2='layout-basic' w='84187' x='586' y='1042'>
              <zone h='24479' id='3' name='Sheet 1' w='42093' x='586' y='28646'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52083' id='5' name='Sheet 3' w='42094' x='42679' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27604' id='10' name='Sheet 2' w='42093' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45833' id='12' name='Sheet 4' w='84187' x='586' y='53125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='200' h='97916' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='14641' x='84773' y='1042'>
              <zone h='10547' id='9' name='Sheet 3' pane-specification-id='2' param='[federated.1kzx0by1n8spv416jv2li1q4x6af].[sum:PercentPopulationInfected:qk]' type-v2='color' w='14641' x='84773' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20703' id='11' name='Sheet 2' pane-specification-id='0' param='[federated.0sferh612h7dwe1bzzye70rjxhob].[none:location:nk]' type-v2='color' w='14641' x='84773' y='11589'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23959' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.08p8rxe1hzpqq915nz2i110o7a43].[none:Location:nk]' type-v2='color' w='14641' x='84773' y='32292'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='14' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='204' h='27604' id='10' is-fixed='true' name='Sheet 2' w='42093' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20703' id='11' name='Sheet 2' pane-specification-id='0' param='[federated.0sferh612h7dwe1bzzye70rjxhob].[none:location:nk]' type-v2='color' w='14641' x='84773' y='11589'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52083' id='5' is-fixed='true' name='Sheet 3' w='42094' x='42679' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10547' id='9' name='Sheet 3' pane-specification-id='2' param='[federated.1kzx0by1n8spv416jv2li1q4x6af].[sum:PercentPopulationInfected:qk]' type-v2='color' w='14641' x='84773' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='180' h='24479' id='3' is-fixed='true' name='Sheet 1' w='42093' x='586' y='28646'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45833' id='12' is-fixed='true' name='Sheet 4' w='84187' x='586' y='53125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23959' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.08p8rxe1hzpqq915nz2i110o7a43].[none:Location:nk]' type-v2='color' w='14641' x='84773' y='32292'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FBC21470-EC35-46E2-A3B5-3374851B97C5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qdajdh0ukre8d15y9m2i19wgos5].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{38198333-1620-41CB-B493-92FBAE6ED743}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0sferh612h7dwe1bzzye70rjxhob].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sferh612h7dwe1bzzye70rjxhob].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B37B3B15-5942-4B21-93CF-0A1914B9F5B4}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1kzx0by1n8spv416jv2li1q4x6af].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kzx0by1n8spv416jv2li1q4x6af].[attr:Location:nk]</field>
            <field>[federated.1kzx0by1n8spv416jv2li1q4x6af].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B25AF92B-28BD-49A3-9872-EBA07B3B904B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08p8rxe1hzpqq915nz2i110o7a43].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.08p8rxe1hzpqq915nz2i110o7a43].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08p8rxe1hzpqq915nz2i110o7a43].[none:Location:nk]</field>
            <field>[federated.08p8rxe1hzpqq915nz2i110o7a43].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE6508CA-5016-4970-AF03-6EE34526AC00}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0sferh612h7dwe1bzzye70rjxhob].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.08p8rxe1hzpqq915nz2i110o7a43].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{81D6BF97-E78D-4112-A332-FF91279D097E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Covid' width='192'>
      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
    </thumbnail>
    <thumbnail height='49' name='Sheet 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      +f9zed3e8rCp0QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
